name: Build and push image
run-name: Build and push image
on:
  push:
    branches:
      - '**'
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Extract branch name
        shell: bash
        run: |
          branch=$(echo ${GITHUB_REF#refs/heads/})
          echo "Branch: $branch"
          echo "branch=$branch" >>$GITHUB_OUTPUT
        id: branch
      -
        name: Set image names
        shell: bash
        run: |
          no_tag=ghcr.io/$(echo "$GITHUB_REPOSITORY" | awk '{print tolower(substr($0,1,index($0,"/")-1)) substr($0,index($0,"/"))}')
          commit_tag=$no_tag:sha-$GITHUB_SHA
          branch_tag=$no_tag:${{ steps.branch.outputs.branch }}
          tags=$commit_tag,$branch_tag
          if [ "${{ steps.branch.outputs.branch }}" == "main" ]; then
            tags="$tags,$no_tag:latest"
          fi

          echo "No tag: $no_tag"
          echo "Commit tag: $commit_tag"
          echo "Branch tag: $branch_tag"
          echo "Tags: $tags"

          echo "no_tag=$no_tag" >>$GITHUB_OUTPUT
          echo "commit_tag=$commit_tag" >>$GITHUB_OUTPUT
          echo "branch_tag=$branch_tag" >>$GITHUB_OUTPUT
          echo "tags=$tags" >>$GITHUB_OUTPUT
        id: image_names
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=${{ steps.image_names.outputs.branch_tag }}
          cache-to: type=inline
          tags: ${{ steps.image_names.outputs.tags }}
